#!/usr/local/bin/bash

if [ ! "${BASH_VERSINFO:-0}" -ge 4 ]; then
  echo "your bash is ancient, bruh" >&2
  exit 1
fi

invert_basic_color() {
  local hex="$1"

  if ((hex > 0x7F)); then
    printf "%02X" "$((hex - 0x80))"
  else
    printf "%02X" "$((0xFF - (0x7F - hex)))"
  fi
}

invert_color() {
  local color="$1"
  local hex="0x${color:1}"

  local red="$(((hex & 0xFF0000) >> 16))"
  local green="$(((hex & 0x00FF00) >> 8))"
  local blue="$((hex & 0x0000FF))"

  red="$(invert_basic_color $red)"
  green="$(invert_basic_color $green)"
  blue="$(invert_basic_color $blue)"

  printf "#%s%s%s" "$red" "$green" "$blue"
}

gen_theme_uuid() {
  mkdir -p .uuids
  if [ ! -f ".uuids/${theme_name}" ]; then
    uuidgen >".uuids/${theme_name}"
  fi

  theme_uuid=$(cat ".uuids/${theme_name}")
}

gen_ide_theme() {
  mkdir -p "$theme_name/resources/META-INF"
  ide_substitutions=""
  for name in "${!colors[@]}"; do
    code="${colors[$name]}"
    code=$(echo "$code" | tr '[:lower:]' '[:upper:]')
    ide_substitutions="s/{{$name}}/$code/g; $ide_substitutions"
  done
  ide_substitutions="s/{{theme}}/$theme_name/g; $ide_substitutions"
  ide_substitutions="s/{{dark}}/$theme_dark/g; $ide_substitutions"

  sed "$ide_substitutions" "tmpl/resources/Theme.theme.json.mo" >"$theme_name/resources/$theme_name.theme.json"
}

gen_editor_theme() {
  editor_substitutions=""
  for name in "${!colors[@]}"; do
    code="${colors[$name]}"
    code="${code:1}"
    code=$(echo "$code" | tr '[:upper:]' '[:lower:]')
    editor_substitutions="s/{{$name}}/$code/g; $editor_substitutions"
  done
  editor_substitutions="s/{{theme}}/$theme_name/g; $editor_substitutions"
  editor_substitutions="s/{{dark}}/$theme_dark/g; $editor_substitutions"

  sed "$editor_substitutions" "tmpl/resources/Theme.xml.mo" >"$theme_name/resources/$theme_name.xml"
}

gen_inverted_colors() {
  colors['invertedHighlight']=$(invert_color "${colors['highlight']}")
  colors['invertedGrey']=$(invert_color "${colors['grey']}")
  colors['invertedRed']=$(invert_color "${colors['red']}")
  colors['invertedGreen']=$(invert_color "${colors['green']}")
  colors['invertedBlue']=$(invert_color "${colors['blue']}")
  colors['invertedPurple']=$(invert_color "${colors['purple']}")
  colors['invertedYellow']=$(invert_color "${colors['yellow']}")
}

theme_name=""
theme_uuid=""
theme_dark=""
gen_theme_name() {
  theme_dark="$dark"
  if [ "$dark" == "true" ]; then
    theme_name="${theme} Dark"
  else
    theme_name="${theme} Light"
  fi
  printf "Generating %s\n" "$theme_name"
}

gen_theme() {
  gen_theme_name
  gen_inverted_colors
  gen_theme_uuid

  plugin_xml_substitutions="s/{{theme}}/$theme_name/g; s/{{description}}/$description/; s/{{uuid}}/$theme_uuid/g"
  sed "$plugin_xml_substitutions" "tmpl/resources/META-INF/plugin.xml.mo" >"$theme_name/resources/META-INF/plugin.xml"

  gen_editor_theme

  invert_fgbg
  invert_colors
  gen_ide_theme
  invert_fgbg
  invert_colors
}

gen_all_themes() {
  for theme in themes/*.sh; do
    source "$theme"

    gen_theme

    invert_theme && gen_theme
  done
}

invert_colors() {
  # invert colors
  colors["red"]=$(invert_color "${colors['red']}")
  colors["green"]=$(invert_color "${colors['green']}")
  colors["blue"]=$(invert_color "${colors['blue']}")
  colors["purple"]=$(invert_color "${colors['purple']}")
  colors["yellow"]=$(invert_color "${colors['yellow']}")

  gen_inverted_colors
}

invert_fgbg() {
  # swap foregrounds & backgrounds
  local foreground="${colors['foreground']}"
  local background="${colors['background']}"
  local dimBackground="${colors['dimBackground']}"
  local dimForeground="${colors['dimForeground']}"

  colors["foreground"]="$background"
  colors["dimForeground"]="$dimBackground"
  colors["background"]="$foreground"
  colors["dimBackground"]="$dimForeground"

  colors["highlight"]="${colors['invertedHighlight']}"
  colors["grey"]=$(invert_color "${colors['grey']}")
  gen_inverted_colors
}

invert_theme() {
  if [ "$dark" == "true" ]; then
    dark="false"
  else
    dark="true"
  fi

  invert_fgbg
  invert_colors
}

gen_all_themes
